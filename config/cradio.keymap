/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define MOVE    3


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <1>;
            bindings = <&kp ESC>;
        };
        
        combo_tab {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <0>;
            bindings = <&kp TAB>;
        };
        
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BACKSPACE>;
        };
        
        combo_hash {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <2>;
            bindings = <&kp LA(NUMBER_3)>;
        };
                
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
		compatible = "zmk,keymap";
		default_layer {
			bindings = <
				&kp Q      &kp W       &kp F      &kp P      &kp G              &kp J &kp L      &kp U      &kp Y       &kp SEMICOLON 
				&lt MOVE A &hm LCTRL R &hm LALT S &hm LGUI T &kp D              &kp H &hm RGUI N &hm RALT E &hm RCTRL I &kp O
				&mt LSFT Z &kp X       &kp C      &kp V      &kp B              &kp K &kp M      &kp CMMA   &kp DOT     &kp SLASH
			      	                     &mo LOWER &mt LSHIFT BSPC              &kp SPC &mo RAISE 
			>;
		};

   		lower_layer {
			bindings = <
				&kp N1    &kp N2    &kp N3    &kp N4    &kp N5                  &kp N6 &kp N7    &kp N8    &kp N9    &kp N0 
				&trans    &trans    &trans    &trans    &trans                  &trans &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp SINGLE_QUOTE
				&trans    &trans    &trans    &trans    &trans                  &trans &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp ENTER
 			                        &trans &mt LSHIFT BSPC                  &kp KP_N0 &trans 
			>;
		};
	
		raise_layer {
			bindings = <
				&kp EXCL  &kp AT   &kp HASH  &kp DLLR &kp PRCT                  &kp CRRT &kp AMPS &kp ASTRK &kp LPRN  &kp RPRN 
				&trans    &kp PLUS &kp EQUAL &kp LPRN &kp LBKT                  &kp RBKT &kp RPRN &kp MINUS &kp UNDER &kp BSLH
				&kp GRAVE &trans   &trans    &trans   &trans                    &trans   &trans   &trans    &trans    &trans
							                 &trans   &trans                    &trans   &trans
				>;
		};	
		
		move_layer {
			bindings = <
				&trans &kp LA(RIGHT) &trans &kp LG(RIGHT) &trans                &trans &trans   &trans   &trans &kp LG(LEFT)
				&trans &trans        &trans &trans        &trans                &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT
				&trans &trans        &trans &trans        &kp LA(LEFT)          &trans &trans   &trans   &trans &trans
						                    &trans        &trans                &trans &trans 
				>;
		};	
        
	};
};
